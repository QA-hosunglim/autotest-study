plugins {
    // Kotlin JVM 플러그인과 애플리케이션 플러그인을 사용합니다.
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'application'
    id 'java'
}

// 그룹과 버전 설정
group = 'org.example'  // 프로젝트의 그룹 ID
version = '1.0-SNAPSHOT'  // 프로젝트 버전

repositories {
    // 의존성을 가져올 저장소를 지정합니다.
    mavenCentral()  // Maven Central 저장소를 사용
}

dependencies {
    // 프로젝트의 의존성을 설정합니다.
    testImplementation 'org.testng:testng:7.8.0'
}

test {
    useTestNG{
        suites "src/test/resources/testng.xml"  // TestNG XML 파일 경로
    }
}

application {
    // 애플리케이션의 메인 클래스를 지정합니다.
    mainClassName = 'org.example.MainKt'  // 실행할 메인 클래스의 이름
}

sourceSets {
    main {
        kotlin {
            srcDirs = ["src/main/kotlin"]
        }
    }
    test {
        kotlin {
            srcDirs = ["src/test/kotlin"]
        }
    }
}

// 사용자 정의 Gradle 작업을 등록합니다.
tasks.register('runMultiplicationTable', JavaExec) {
    // 작업의 classpath를 설정합니다.
    classpath = sourceSets.main.runtimeClasspath  // 실행에 필요한 클래스 경로
    // 메인 클래스 설정
    main = 'org.example.MainKt'  // 실행할 메인 클래스의 이름
    // 표준 입력을 설정합니다.
    standardInput = System.in  // 표준 입력을 사용하여 사용자 입력을 받을 수 있도록 설정
}

// 사용자 정의 Gradle 작업을 등록합니다.
tasks.register('runSolution', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.example.Study_2Kt'
    standardInput = System.in
}

// 사용자 정의 Gradle 작업을 등록합니다.
tasks.register('MultiplicationTable', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.example.MultiplicationTableKt'
    standardInput = System.in
}